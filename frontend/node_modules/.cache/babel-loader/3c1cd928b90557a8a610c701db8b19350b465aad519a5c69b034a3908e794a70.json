{"ast":null,"code":"const API_BASE = 'http://localhost:8000'; // Change to your backend URL\n\nexport async function login(username, password) {\n  const res = await fetch(`${API_BASE}/api/login/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('Login failed');\n  return res.json();\n}\nexport async function getProducts() {\n  const res = await fetch(`${API_BASE}/api/products/`);\n  if (!res.ok) throw new Error('Failed to fetch products');\n  return res.json();\n}\nexport async function getOrders(token) {\n  const res = await fetch(`${API_BASE}/api/orders/`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('Failed to fetch orders');\n  return res.json();\n}\nexport async function checkout(cart, token) {\n  const res = await fetch(`${API_BASE}/api/checkout/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      cart\n    })\n  });\n  if (!res.ok) throw new Error('Checkout failed');\n  return res.json();\n}","map":{"version":3,"names":["API_BASE","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","getProducts","getOrders","token","checkout","cart"],"sources":["C:/Users/likit/Downloads/ecommerce/frontend/src/api.js"],"sourcesContent":["const API_BASE = 'http://localhost:8000'; // Change to your backend URL\r\n\r\nexport async function login(username, password) {\r\n  const res = await fetch(`${API_BASE}/api/login/`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password })\r\n  });\r\n  if (!res.ok) throw new Error('Login failed');\r\n  return res.json();\r\n}\r\n\r\nexport async function getProducts() {\r\n  const res = await fetch(`${API_BASE}/api/products/`);\r\n  if (!res.ok) throw new Error('Failed to fetch products');\r\n  return res.json();\r\n}\r\n\r\nexport async function getOrders(token) {\r\n  const res = await fetch(`${API_BASE}/api/orders/`, {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  });\r\n  if (!res.ok) throw new Error('Failed to fetch orders');\r\n  return res.json();\r\n}\r\n\r\nexport async function checkout(cart, token) {\r\n  const res = await fetch(`${API_BASE}/api/checkout/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ cart })\r\n  });\r\n  if (!res.ok) throw new Error('Checkout failed');\r\n  return res.json();\r\n} "],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,OAAO,eAAeC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAa,EAAE;IAChDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EAC5C,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,CAAC;EACpD,IAAI,CAACI,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeE,SAASA,CAACC,KAAK,EAAE;EACrC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,cAAc,EAAE;IACjDO,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUS,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,IAAI,CAACZ,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeI,QAAQA,CAACC,IAAI,EAAEF,KAAK,EAAE;EAC1C,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;IACnDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUS,KAAK;IAClC,CAAC;IACDR,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEQ;IAAK,CAAC;EAC/B,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EAC/C,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}